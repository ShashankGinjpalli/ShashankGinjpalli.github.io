{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/circle.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './circle.css'\n\nconst CircleProgress = ({\n  percentage,\n  width,\n  strokeWidth,\n  fontSize,\n  fontColor,\n  fontFamily,\n  primaryColor,\n  secondaryColor,\n  fill,\n}) => {\n  const PI = 3.14\n\n  const R = (width / 2) - (strokeWidth * 2)\n  let circumference = 2 * PI * R\n  let offset = circumference - percentage / 100 * circumference\n  let gradientId = `${primaryColor[0]}${primaryColor[1]}`.replace(/#/g, '')\n  return (\n    <div\n      className={styles.reactGradientProgress}\n      style={{\n        height: `${width}px`,\n        width: `${width}px`,\n      }}\n    >\n      <div id={styles.reactGradientProgressPercentage}>\n        <span\n          className={styles.reactGradientProgressPercentageSpan}\n          style={{\n            fontSize,\n            fontFamily,\n            color: fontColor,\n          }}\n        >\n          {percentage}%\n        </span>\n      </div>\n\n      <svg\n        className={styles.progressCircle}\n        width='100%'\n        height='100%'\n        version='1.1'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <linearGradient\n          id={gradientId}\n          x1='0%'\n          y1='0%'\n          x2='100%'\n          y2='100%'\n        >\n          <stop offset='0%' stopColor={primaryColor[0]} />\n          <stop offset='100%' stopColor={primaryColor[1]} />\n        </linearGradient>\n        <circle\n          strokeWidth={strokeWidth}\n          fill='transparent'\n          r={R}\n          cx={width / 2}\n          cy={width / 2}\n          stroke={secondaryColor}\n          strokeDasharray={`${circumference} ${circumference}`}\n        />\n        <circle\n          className={styles.progressCircleBar}\n          strokeWidth={strokeWidth}\n          fill={fill}\n          r={R}\n          cx={width / 2}\n          cy={width / 2}\n          stroke={`url(#${gradientId})`}\n          strokeLinecap='round'\n          strokeDasharray={`${circumference} ${circumference}`}\n          strokeDashoffset={offset}\n        />\n      </svg>\n    </div>\n  )\n}\n\nCircleProgress.propTypes = {\n  percentage: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  fontSize: PropTypes.string,\n  fontColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  primaryColor: PropTypes.array,\n  secondaryColor: PropTypes.string,\n  fill: PropTypes.string,\n}\n\nCircleProgress.defaultProps = {\n  width: 200,\n  strokeWidth: 5,\n  fontSize: '30px',\n  fontColor: 'inherit',\n  fontFamily: 'inherit',\n  primaryColor: ['#00BBFF', '#92d7f1'],\n  secondaryColor: 'transparent',\n  fill: 'transparent',\n}\n\nexport default CircleProgress\n"],"names":["CircleProgress","percentage","width","strokeWidth","fontSize","fontColor","fontFamily","primaryColor","secondaryColor","fill","PI","R","circumference","offset","gradientId","replace","styles","reactGradientProgress","reactGradientProgressPercentage","reactGradientProgressPercentageSpan","progressCircle","progressCircleBar","propTypes","PropTypes","number","isRequired","string","array","defaultProps"],"mappings":";;;;;;;;;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;EAC7B,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;EAC/B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;;EAE5B,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;;EAExD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAC5C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;;EAExB,IAAI,QAAQ,KAAK,KAAK,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3C,MAAM;MACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;GACF,MAAM;IACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;GACzB;;EAED,IAAI,KAAK,CAAC,UAAU,EAAE;IACpB,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;GAChC,MAAM;IACL,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD;CACF;;;;;;ACpBD,IAAMA,iBAAiB,SAAjBA,cAAiB,OAUjB;MATJC,UASI,QATJA,UASI;MARJC,KAQI,QARJA,KAQI;MAPJC,WAOI,QAPJA,WAOI;MANJC,QAMI,QANJA,QAMI;MALJC,SAKI,QALJA,SAKI;MAJJC,UAII,QAJJA,UAII;MAHJC,YAGI,QAHJA,YAGI;MAFJC,cAEI,QAFJA,cAEI;MADJC,IACI,QADJA,IACI;;MACEC,KAAK,IAAX;;MAEMC,IAAKT,QAAQ,CAAT,GAAeC,cAAc,CAAvC;MACIS,gBAAgB,IAAIF,EAAJ,GAASC,CAA7B;MACIE,SAASD,gBAAgBX,aAAa,GAAb,GAAmBW,aAAhD;MACIE,aAAa,MAAGP,aAAa,CAAb,CAAH,GAAqBA,aAAa,CAAb,CAArB,EAAuCQ,OAAvC,CAA+C,IAA/C,EAAqD,EAArD,CAAjB;SAEE;;;iBACaC,OAAOC,qBADpB;aAES;gBACMf,KAAX,OADK;eAEKA,KAAV;;;;;QAGG,IAAIc,OAAOE,+BAAhB;;;;qBAEeF,OAAOG,mCADpB;iBAES;8BAAA;kCAAA;mBAGEd;;;kBALX;;;KARJ;;;;mBAqBeW,OAAOI,cADpB;eAEQ,MAFR;gBAGS,MAHT;iBAIU,KAJV;eAKQ;;;;;cAGAN,UADN;cAEK,IAFL;cAGK,IAHL;cAIK,MAJL;cAKK;;sCAEG,QAAO,IAAb,EAAkB,WAAWP,aAAa,CAAb,CAA7B,GAPF;sCAQQ,QAAO,MAAb,EAAoB,WAAWA,aAAa,CAAb,CAA/B;OAfJ;;qBAkBiBJ,WADf;cAEO,aAFP;WAGKQ,CAHL;YAIMT,QAAQ,CAJd;YAKMA,QAAQ,CALd;gBAMUM,cANV;yBAOsBI,aAApB,SAAqCA;QAxBzC;;mBA2BeI,OAAOK,iBADpB;qBAEelB,WAFf;cAGQM,IAHR;WAIKE,CAJL;YAKMT,QAAQ,CALd;YAMMA,QAAQ,CANd;0BAOkBY,UAAhB,MAPF;uBAQgB,OARhB;yBASsBF,aAApB,SAAqCA,aATvC;0BAUoBC;;;GAzD1B;CAjBF;;AAiFAb,eAAesB,SAAf,GAA2B;cACbC,UAAUC,MAAV,CAAiBC,UADJ;SAElBF,UAAUC,MAFQ;eAGZD,UAAUC,MAHE;YAIfD,UAAUG,MAJK;aAKdH,UAAUG,MALI;cAMbH,UAAUG,MANG;gBAOXH,UAAUI,KAPC;kBAQTJ,UAAUG,MARD;QASnBH,UAAUG;CATlB;;AAYA1B,eAAe4B,YAAf,GAA8B;SACrB,GADqB;eAEf,CAFe;YAGlB,MAHkB;aAIjB,SAJiB;cAKhB,SALgB;gBAMd,CAAC,SAAD,EAAY,SAAZ,CANc;kBAOZ,aAPY;QAQtB;CARR;;;;"}